import { GoogleGenerativeAI } from '@google/generative-ai';
import { useState } from 'react';

function App() {
  const [input, setInput] = useState('');
  const [chat, setChat] = useState([]);
  const API_KEY = import.meta.env.VITE_GEMINI_API_KEY;

  const handleInput = async () => {
    if (!input.trim()) return;
    
    try {
      const genAI = new GoogleGenerativeAI(API_KEY);
      const model = genAI.getGenerativeModel({ model: "gemini-2.0-flash" });
      const result = await model.generateContent(input);
      const response = await result.response.text();
      
      setChat([...chat, {
        userText: input,
        aiText: response
      }]);
      
      setInput('');
    }
    catch(err) {
      console.error(err);
      setChat([...chat, {
        userText: input,
        aiText: "Error: Failed to get response"
      }]);
    }
  }

  return ( 
    <div className="min-h-screen bg-gray-900 text-white flex flex-col items-center p-4">
      <div className="w-full max-w-3xl flex-1 overflow-y-auto mb-4 space-y-6">
        {chat.map((val, i) => (
          <div key={i} className="space-y-2">
            <div className="bg-gray-700 p-4 rounded-lg">
              <p className="font-medium">You:</p>
              <p>{val.userText}</p>
            </div>
            <div className="bg-blue-900 p-4 rounded-lg">
              <p className="font-medium">AI:</p>
              <p className="text-gray-100">{val.aiText}</p>
            </div>
          </div>
        ))}
      </div>
      
      <div className="w-full max-w-3xl flex gap-2 sticky bottom-4">
        <input 
          type="text" 
          placeholder="Ask me something..."
          className="flex-1 bg-gray-700 text-white p-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
          value={input}
          onChange={(e) => setInput(e.target.value)}
          onKeyPress={(e) => e.key === 'Enter' && handleInput()}
        />
        <button 
          className="bg-blue-600 hover:bg-blue-500 text-white px-6 py-4 rounded-lg transition-colors"
          onClick={handleInput}
        >
          Send
        </button>
      </div>
    </div>
  );
}

export default App;